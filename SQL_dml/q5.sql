#Q5. List the user ids of up to 10 pairs of users where their distances are exactly 2 (i.e., they do not have
#		 direct friendship and share at least one common friend).
SELECT DISTINCT(RESULT1.REC_FRIEND_A), RESULT1.REC_FRIEND_B
FROM
	(SELECT DIRECT_FRIEND_LIST_RIGHT.A1 AS REC_FRIEND_A, DIRECT_FRIEND_LIST_LEFT.A2 AS REC_FRIEND_B
		FROM 
        (SELECT INVITER_ID AS A1, INVITEE_ID AS A2
			FROM FRIENDSHIPS
			WHERE STATUS = 1
		UNION
		SELECT INVITEE_ID AS A1, INVITER_ID AS A2
			FROM FRIENDSHIPS
			WHERE STATUS = 1
			ORDER BY A1) AS DIRECT_FRIEND_LIST_RIGHT
	INNER JOIN 
    (SELECT INVITER_ID AS A1, INVITEE_ID AS A2
		FROM FRIENDSHIPS
		WHERE STATUS = 1
	UNION
	SELECT INVITEE_ID AS A1, INVITER_ID AS A2
		FROM FRIENDSHIPS
		WHERE STATUS = 1
		ORDER BY A1) AS DIRECT_FRIEND_LIST_LEFT 
	ON DIRECT_FRIEND_LIST_RIGHT.A2 = DIRECT_FRIEND_LIST_LEFT.A1
WHERE DIRECT_FRIEND_LIST_RIGHT.A1 <> DIRECT_FRIEND_LIST_LEFT.A2 
AND (DIRECT_FRIEND_LIST_RIGHT.A1,DIRECT_FRIEND_LIST_LEFT.A2) NOT IN 
	(SELECT INVITER_ID, INVITEE_ID
		FROM FRIENDSHIPS
		WHERE STATUS = 1
	UNION
	SELECT INVITEE_ID, INVITER_ID
		FROM FRIENDSHIPS
		WHERE STATUS = 1)) AS RESULT1 
	LEFT JOIN 
    (SELECT DIRECT_FRIEND_LIST_RIGHT.A1 AS REC_FRIEND_A, DIRECT_FRIEND_LIST_LEFT.A2 AS REC_FRIEND_B 
		FROM 
        (SELECT INVITER_ID AS A1, INVITEE_ID AS A2
			FROM FRIENDSHIPS
			WHERE STATUS = 1
		UNION
		SELECT INVITEE_ID AS A1, INVITER_ID AS A2
			FROM FRIENDSHIPS
			WHERE STATUS = 1
			ORDER BY A1) AS DIRECT_FRIEND_LIST_RIGHT
	INNER JOIN 
    (SELECT INVITER_ID AS A1, INVITEE_ID AS A2
		FROM FRIENDSHIPS
		WHERE STATUS = 1
	UNION
	SELECT INVITEE_ID AS A1, INVITER_ID AS A2
		FROM FRIENDSHIPS
		WHERE STATUS = 1
		ORDER BY A1) AS DIRECT_FRIEND_LIST_LEFT 
    ON DIRECT_FRIEND_LIST_RIGHT.A2 = DIRECT_FRIEND_LIST_LEFT.A1
WHERE DIRECT_FRIEND_LIST_RIGHT.A1 <> DIRECT_FRIEND_LIST_LEFT.A2 
AND (DIRECT_FRIEND_LIST_RIGHT.A1,DIRECT_FRIEND_LIST_LEFT.A2) NOT IN 
	(SELECT INVITER_ID, INVITEE_ID
		FROM FRIENDSHIPS
		WHERE STATUS = 1
	UNION
	SELECT INVITEE_ID, INVITER_ID
	FROM FRIENDSHIPS
	WHERE STATUS = 1)) AS RESULT2 
ON RESULT1.REC_FRIEND_A = RESULT2.REC_FRIEND_B AND RESULT1.REC_FRIEND_B = RESULT2.REC_FRIEND_A
WHERE RESULT1.REC_FRIEND_A < RESULT2.REC_FRIEND_A OR RESULT2.REC_FRIEND_A IS NULL
ORDER BY RESULT1.REC_FRIEND_A
LIMIT 10;